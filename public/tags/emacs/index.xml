<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on My New Hugo Site</title>
    <link>http://example.org/tags/emacs/</link>
    <description>Recent content in Emacs on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Jul 2023 11:20:25 +0900</lastBuildDate><atom:link href="http://example.org/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MacbookPro 2021(Apple M1Pro)でT-Code</title>
      <link>http://example.org/posts/t-code-with-emacs-on-applem1pro/</link>
      <pubDate>Sat, 08 Jul 2023 11:20:25 +0900</pubDate>
      
      <guid>http://example.org/posts/t-code-with-emacs-on-applem1pro/</guid>
      <description>絶滅危惧種のT-Code使いです(笑) T-Code(tc)は、melpaを使用できるのですが、 Emacs 28.2とかだと、やり方が少し変ったみたいです
謝辞-参考サイト Emulator of GNU Emacs IME patch for Windows (tr-ime)
melpa設定 init.elに以下を追加
(package-initialize) (customize-set-variable &amp;#39;package-archives `(,@package-archives (&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;))) T-Code(tc)のインストール 1.Emacsを起動し、以下のコマンドを実行
M-x package-refresh-contents M-x package-install tc 2.package-install後、以下のコマンドを実行
M-x tcode-install init.elの設定 (require &amp;#39;tc-setup) (set-input-method &amp;#34;japanese-T-Code&amp;#34;) (define-key global-map [?¥] [?\\]) (define-key global-map [?\C-¥] &amp;#39;toggle-input-method) ;; C-hをバックスペースにする (global-set-key &amp;#34;\C-h&amp;#34; &amp;#39;delete-backward-char) 以上</description>
    </item>
    
    <item>
      <title>MacbookPro 2021(Apple M1Pro)でEmacs</title>
      <link>http://example.org/posts/emacs-on-applem1pro/</link>
      <pubDate>Mon, 03 Jul 2023 22:01:12 +0900</pubDate>
      
      <guid>http://example.org/posts/emacs-on-applem1pro/</guid>
      <description>ずっとMacbook Pro 2012を使っていました。もう最新OSに バージョアップできないし、最近ずっと円安だし、買い替えするなら中古だと 思って、最初はMacbook Pro 13インチを狙っていたのですが、 14インチとの値段差が少なくなってきたので、Macbook Pro 14インチを 落札しました。ということで、Emacsのインストールです。
謝辞-参考サイト Homebrewのインストール方法を分かりやすく解説（M1 Macも対応
Macに最適なEmacsを選ぶ - アナグマのモノローグ
Homebrewインストール HomebrewのWebpage通りに、ターミナルに貼り付け実行
$ /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; マシンのパスワードを求められるので入力し、しばらく待つ
その後、インストールが完了するので、ターミナルの出力通りにPATHを通す
$ (echo; echo &amp;#39;eval &amp;#34;$(/opt/homebrew/bin/brew shellenv)&amp;#34;&amp;#39;) &amp;gt;&amp;gt; /Users/ユーザ名/.zprofile $ eval &amp;#34;$(/opt/homebrew/bin/brew shellenv)&amp;#34; Emacs Mac Prot版のインストール 今回はrailwaycat氏のバイナリ版をインストールしてみます
$ brew tap railwaycat/emacsmacport $ brew install emacs-mac --with-modern-icon --with-imagemagic $ ln -s /opt/homebrew/opt/emacs-mac/Emacs.app /Applications キーボード設定変更 標準だと日本語切り替えをC-SPC([Control]キーと[スペース]キーの同時押し)で行うので、 以下の手順でこれを解除
「システム設定&amp;gt;キーボード」を選択 [キーボードショートカット]をクリック 左側エリアの「入力ソース」を選択 右側エリアの「前の入力ソース選択」のチェックを外し\ 右側エリアの「入力メニューの次のソースを選択」のチェックを外す init.elの追加 とりあえずinit.elは以下の様にした
(mac-auto-ascii-mode 1) ;; 言語を日本語にする (set-language-environment &amp;#39;Japanese) ;; 極力UTF-8とする (prefer-coding-system &amp;#39;utf-8) ;; TABの表示幅。初期値は8 (setq default-tab-width 4) ;; 質問をy/nで回答する (fset &amp;#39;yes-or-no-p &amp;#39;y-or-n-p) ;;;;;;;;;;;;;;;;;;;;;;; ;;; キーバインディング ;;; ;;;;;;;;;;;;;;;;;;;;;;; ;; C-hをバックスペースにする (global-set-key &amp;#34;\C-h&amp;#34; &amp;#39;delete-backward-char) ;; M-¥で\(バックスラッシュ)を入力する (define-key global-map [?</description>
    </item>
    
    <item>
      <title>Emacs on Android で eww</title>
      <link>http://example.org/posts/eww-with-emacs-on-android/</link>
      <pubDate>Sat, 26 Feb 2022 22:38:56 +0900</pubDate>
      
      <guid>http://example.org/posts/eww-with-emacs-on-android/</guid>
      <description>Android(Termux)でもEmacsでewwの設定をしてみた
謝辞-参考サイト TermuxでEmacsを使うためにやったこと
Emacs での テキストブラウザ eww を使えるレベルにする
eww設定 ~/emacs.d/init.elに好みで以下を設定する
&amp;#34;shr-external-browser&amp;#34;だと何か警告されるので &amp;#34;browse-url-secondary-browser-function&amp;#34;に変更した
;; デフォルトブラウザをEWWにする (setq browse-url-browser-function #&amp;#39;eww-browse-url) ;; Web検索をgoogleに設定 (setq eww-search-prefix &amp;#34;http://www.google.co.jp/search?q=&amp;#34;) ;; httpsアクセスに失敗する (setq gnutls-algorithm-priority &amp;#34;NORMAL:-VERS-TLS1.3&amp;#34;) ;; chromeを&amp;#34;&amp;amp;&amp;#34;で起動できるようにする (setq browse-url-generic-program (executable-find &amp;#34;termux-open-url&amp;#34;)) (setq browse-url-secondary-browser-function &amp;#39;browse-url-generic) 以上</description>
    </item>
    
    <item>
      <title>Emacs on MacOS で eww</title>
      <link>http://example.org/posts/eww-with-emacs-on-macos/</link>
      <pubDate>Sun, 13 Feb 2022 21:11:36 +0900</pubDate>
      
      <guid>http://example.org/posts/eww-with-emacs-on-macos/</guid>
      <description>ewwはEmacs上で動作するwebブラウザで標準インストール済
以下のコマンドで起動する
M-x eww 謝辞-参考サイト emacs 26.2 で https アクセスに失敗する
EmacsでTLSエラーを回避
eww設定 ~/emacs.d/init.elに好みで以下を設定する
;; デフォルトブラウザをEWWにする (setq browse-url-browser-function #&amp;#39;eww-browse-url) ;; Web検索をgoogleに設定 (setq eww-search-prefix &amp;#34;http://www.google.co.jp/search?q=&amp;#34;) ;; httpsアクセスに失敗する (setq gnutls-algorithm-priority &amp;#34;NORMAL:-VERS-TLS1.3&amp;#34;) ※httpsアクセスに失敗する場合、gnutlsをインストールする
$ brew install gnutls ※gnutlsインストール後に、関数&amp;#34;(gnutls-available-p)&amp;#34;を C-jで評価したけど、tは返ってこず、以下の通り、何故か変わらなかった? けどhttpsはアクセス可能
ClientHello\ Padding Key\ Share Post\ Handshake\ Auth PSK\ Key\ Exchange\ Modes Cookie Supported\ Versions Early\ Data Pre\ Shared\ Key Session\ Ticket Record\ Size\ Limit Extended\ Master\ Secret Encrypt-then-MAC …) 以上</description>
    </item>
    
    <item>
      <title>Termux on Android で Emacs</title>
      <link>http://example.org/posts/emacs-on-termux/</link>
      <pubDate>Thu, 10 Feb 2022 16:57:08 +0900</pubDate>
      
      <guid>http://example.org/posts/emacs-on-termux/</guid>
      <description>謝辞-参考サイト How to install DDSKK using MELPA
Emacsインストール $ apt-get install emacs 一度Emacsを起動させて、C-x C-cで閉じる
melpa 設定 ~/.emacs.d/init.elに以下を追加
(require &amp;#39;package) (add-to-list &amp;#39;package-archives &amp;#39;(&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;) t) (package-initialize) ddskk インストール ソフトキーボード等ではこっちを使う
M-x package-install ddskk ddskkの設定は、上記参考サイトを確認のこと
t-code インストール 絶滅危惧種のTコード使いなので、普段はこっちを使ったりする
M-x package-install tc M-x tcode-install ~/.emacs.d/init.elに以下を追加
(C-¥に割り当てできなかったので、C-\とC-x ¥に割り当て)
(require &amp;#39;tc-setup) (set-input-method &amp;#34;japanese-T-Code&amp;#34;) ;; (define-key global-map [?\C-¥] &amp;#39;toggle-input-method) (global-set-key (kbd &amp;#34;C-\\&amp;#34;) &amp;#39;toggle-input-method) (global-set-key (kbd &amp;#34;C-x \¥&amp;#34;) &amp;#39;toggle-input-method) 以上</description>
    </item>
    
    <item>
      <title>easy-hugoでポストする練習</title>
      <link>http://example.org/posts/post-at-easy-hugo-on-emacs/</link>
      <pubDate>Sun, 06 Feb 2022 21:40:28 +0900</pubDate>
      
      <guid>http://example.org/posts/post-at-easy-hugo-on-emacs/</guid>
      <description>謝辞-参考サイト emacs-easy-hugo
Hugoとemacsの融合(easy-hugo)
EmacsでPATHの設定が引き継がれない問題をエレガントに解決する
MacターミナルでGithubにプッシュする際に毎回パスフレーズを聞かれる時の対処法
easy-hugo インストール emacs上で以下のコマンドを実行(MELPAをあらかじめ設定しておく)
M-x package-install .emacs.d/init.elの設定 (setq easy-hugo-basedir &amp;#34;~/hanuomk2.github.io/&amp;#34;) (setq easy-hugo-url &amp;#34;https://hanuomk2.github.io&amp;#34;) (setq easy-hugo-sshdomain &amp;#34;github.com&amp;#34;) (setq easy-hugo-root &amp;#34;/&amp;#34;) (setq easy-hugo-previewtime &amp;#34;300&amp;#34;) (setq easy-hugo-postdir &amp;#34;content/posts&amp;#34;) (setq easy-hugo-default-ext &amp;#34;.org&amp;#34;) (define-key global-map (kbd &amp;#34;C-c C-e&amp;#34;) &amp;#39;easy-hugo) deploy.shの作成 #!/bin/sh echo -e &amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34; hugo git add -A git rm --cached -r themes/hugo-primer msg=&amp;#34;rebuilding site `LANG=C date`&amp;#34; if [ $# -eq 1 ] then msg=&amp;#34;$1&amp;#34; fi git commit -m &amp;#34;$msg&amp;#34; git push -u origin main 上記参照サイトに従って、パスフレーズを入力しなくてもpushできるようにしておく</description>
    </item>
    
  </channel>
</rss>
